# .gitHub/workflows/docker-image.yml
name: Build and Push Docker Image

# master 브랜치에 push 가 될 때 이 Workflow 가 트리거 됨
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드르 체크아웃 (가져옴)
      - name: Checkout code
        uses: actions/checkout@v4

      # 프로젝트를 build 해야 하기 때문에 알맞은 jdk 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      # gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # build 명령어 실행하여 .jar 파일 만들어 줌
      - name: Build with Gradle
        run: ./gradlew build

      # 2. Docker hub 로그인
      - name: Log in to Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t yawning5/ec2study:latest .

      # 4. Docker 이미지 푸시
      - name: Push Docker image
        run: docker push yawning5/ec2study:latest

      # CD SSH 를 통해 EC2 에 접속 및 컨테이너 실행
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }} # Passphrase 가 설정된 경우 사용
          port: 22
          script: |
            docker pull yawning5/ec2study:latest
            # 실행 중인 컨테이너 중지, 중지할 컨테이너가 없더라도 오류 발생 방지
            docker kill $(docker ps -q --filter ancestor=yawning5/ec2study:latest) || true
            # 새로운 컨테이너 실행
            docker run -d -p 8080:8080 yawning5/ec2study:latest
          debug: true